{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponents.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/DishdetailComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponents.js","components/HeaderComponent.js","components/FooterComponent.js","redux/dishes.js","redux/comments.js","redux/leaders.js","redux/promotions.js","redux/forms.js","App.js","redux/confgureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","Card","to","id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","menu","dishes","map","key","isLoading","dishErrMsg","errMsg","Breadcrumb","BreadcrumbItem","active","RenderCard","item","in","transformProps","exitTransform","CardBody","designation","CardSubtitle","CardText","description","Home","dishesLoading","promotion","promoLoading","promoErrMsg","leader","leadersLoading","errMess","leadersErrMess","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","values","console","log","JSON","stringify","alert","resetFeedbackForm","bind","href","role","model","onSubmit","Row","Label","md","htmlFor","Col","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","Button","type","color","Component","About","leaders","RenderLeader","Media","tag","left","middle","object","body","heading","RenderLeaders","list","CardHeader","title","CommentForm","toggleModal","setState","isModalOpen","state","handleLogin","postComment","dishId","rating","message","Fragment","outline","this","Modal","isOpen","toggle","ModalHeader","ModalBody","FormGroup","value","RenderDish","top","RenderComments","comments","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","addComment","payload","dishLoading","dishesFailed","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","dispatch","leadersFailed","errmess","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","promotions","promo","lead","exact","match","parseInt","params","comm","commentsErrMsg","postFeedback","withRouter","connect","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","catch","actions","reset","errorMessage","feedback","newFeedback","Object","assign","Header","toggleNav","isNavOpen","event","username","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","height","Collapse","navbar","Nav","NavItem","Form","Input","innerRef","input","Jumbotron","Footer","Dishes","action","Comments","concat","Leaders","Promotions","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a5f6a7fe.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className='col-12'>\r\n            <span className='fa fa-spinner fa-pulse fa-3x fa-fw text-primary'></span>\r\n            <p>Loading . . . </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loading;","export const baseUrl = 'http://localhost:3001/'\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardImg, CardImgOverlay, CardTitle } from 'reactstrap';\r\nimport Loading from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl'\r\n\r\nfunction RenderMenuItem({dish,onClick}){\r\n    return(\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`}>\r\n                <CardImg width='100%' src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst Menu = (props)=>{\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return(\r\n            <div key = {dish.id} className = 'col-12 col-md-5 m-1'>\r\n                <RenderMenuItem dish={dish} />\r\n            </div>\r\n        );\r\n    });\r\n\r\n    if(props.dishes.isLoading){\r\n        return(\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else if(props.dishErrMsg){\r\n        return(\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <h4>{props.dishes.errMsg}</h4>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return ( \r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                </div>\r\n                <div className='col-12'>\r\n                    <h3>Menu</h3>\r\n                    <hr />\r\n                </div>\r\n                <div className='row'>\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n            );\r\n        }\r\n    }\r\nexport default Menu;\r\n","import React from 'react';\r\nimport { Card, CardBody, CardImg, CardSubtitle, CardText, CardTitle } from 'reactstrap';\r\nimport Loading from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl'\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({ item, isLoading, errMsg }){\r\n    if(isLoading){\r\n        return(\r\n            <Loading />\r\n        );\r\n    } else if(errMsg){\r\n        return(\r\n            <h4>{errMsg}</h4>\r\n        )\r\n    }\r\n    else\r\n    return(\r\n        <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                    <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n    )\r\n}\r\n\r\nfunction Home(props) {\r\n    return ( \r\n            <div className='container'>\r\n                <div className='row align-items-start'>\r\n                    <div className='col-12 col-md m-1'>\r\n                        <RenderCard item = {props.dish} \r\n                        isLoading = {props.dishesLoading} \r\n                        errMsg = {props.dishErrMsg}\r\n                        />\r\n                    </div>\r\n                    <div className='col-12 col-md m-1'>\r\n                        <RenderCard item = {props.promotion} \r\n                            isLoading = {props.promoLoading}\r\n                            errMsg = {props.promoErrMsg}\r\n                        />\r\n                    </div>\r\n                    <div className='col-12 col-md m-1'>\r\n                        <RenderCard item={props.leader} isLoading={props.leadersLoading} errMess={props.leadersErrMess} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n     );\r\n}\r\n \r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Col, Label, Row } from 'reactstrap';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    handleSubmit = (values) => {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className='row'>\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                </div>\r\n                <div className='col-12'>\r\n                    <h3>Contact Us</h3>\r\n                    <hr />\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href='/'><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='row row-content'>\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model = 'feedback' onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className='form-group'>\r\n                                <Label md={2} htmlFor='firstname' >First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model='.firstname' name='firstname' id='firstname' \r\n                                    placeholder='First Name'\r\n                                    className='form-control'\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                    />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".firstname\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Label md={2} htmlFor='lastname' >Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model='.lastname' name='lastname' id='lastname' \r\n                                    placeholder='Last Name'\r\n                                    className='form-control'\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                     />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".lastname\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }}\r\n                                />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Label md={2} htmlFor='telnum' >Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model='.telnum' name='telnum' id='telnum' \r\n                                    placeholder='Tel. number'\r\n                                    className='form-control'\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                    }}\r\n                                     />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".telnum\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 numbers',\r\n                                        maxLength: 'Must be 15 numbers or less',\r\n                                        isNumber: 'Must be a number'\r\n                                    }}\r\n                                 />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Label md={2} htmlFor='email'>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model='.email' name='email' id='email' \r\n                                    placeholder='email'\r\n                                    className='form-control'\r\n                                    validators={{\r\n                                        required, validEmail\r\n                                    }}\r\n                                     />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".email\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        validEmail: 'Invalid Email Address'\r\n                                    }}\r\n                                 />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Col md={{size:6, offset:2}}>\r\n                                    <Row>\r\n                                        <Label check>\r\n                                            <Control.checkbox model='.agree'\r\n                                            name='agree'\r\n                                            className='form-check-input' />\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col md={{size:3, offset:1}}>\r\n                                    <Control.select model='.contactType' name='contactType'\r\n                                        className=\"form-control\" >\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Label md={2} htmlFor='message'>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model='.message' name='message' id='message'\r\n                                    rows='12' \r\n                                    className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Col md={{size:10,offset:2}}>\r\n                                    <Button type='submit' color='primary' >\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Loading from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.leaders.map(leader => {\r\n        return (\r\n            <RenderLeader leader={leader} key={leader.id} />\r\n        );\r\n    });\r\n\r\n    function RenderLeader({ leader }) {\r\n        return (\r\n            <Fade in>\r\n                <Media tag=\"li\" key={leader.id} className=\"col-12 mt-5\" >\r\n                    <Media left middle>\r\n                        <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                    </Media>\r\n                    <Media body className=\"ml-5\">\r\n                        <Media heading>{leader.name}</Media>\r\n                        <p>{leader.designation}</p>\r\n                        <p>{leader.description}</p>\r\n                    </Media>\r\n                </Media>\r\n            </Fade>\r\n        );\r\n    }\r\n\r\n    function RenderLeaders() {\r\n\r\n        if (props.leaders.isLoading) {\r\n            return <Loading />;\r\n        }\r\n        else if (props.leaders.errMess) {\r\n            return (\r\n                <h4>{props.leaders.errMess}</h4>\r\n            );\r\n        }\r\n        else return (\r\n            <Media list>\r\n                <Stagger in>\r\n                    {leaders}\r\n                </Stagger>\r\n            </Media>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <RenderLeaders />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default About;   ","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardImg, CardText, CardTitle, Button, FormGroup, Label, Modal, ModalBody, ModalHeader } from 'reactstrap';\r\nimport { Control, Errors, LocalForm } from 'react-redux-form';\r\nimport Loading from './LoadingComponent'\r\nimport { baseUrl } from '../shared/baseUrl'\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            isModalOpen: false\r\n         }\r\n    }\r\n\r\n    toggleModal =()=>{\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin = (values) =>{  \r\n        this.toggleModal(); \r\n        this.props.postComment(this.props.dishId, values.rating, values.name, values.message);\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n                <Button outline onClick={this.toggleModal}><span className='fa fa-pencil fa-lg'></span> Submit Comment</Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleLogin(values)}>\r\n                            <div className='form-group'>\r\n                                <Label htmlFor='rating' >Rating</Label>\r\n                                <FormGroup>\r\n                                    <Control.select model='.rating' name='rating'\r\n                                        className=\"form-control\" >\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                        <option>6</option>\r\n                                    </Control.select>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className='form-group'>\r\n                                <Label htmlFor='name' >Your Name</Label>\r\n                                <FormGroup>\r\n                                    <Control.text model='.name' name='name' id='name' \r\n                                    placeholder='Your Name'\r\n                                    className='form-control'\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                        />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".name\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }}\r\n                                />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className='form-group'>\r\n                                <Label htmlFor='message'>message</Label>\r\n                                <FormGroup>\r\n                                    <Control.textarea model='.message' name='message' id='message'\r\n                                    rows='6' \r\n                                    className=\"form-control\" />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className='form-group'>\r\n                                <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n                            </div>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n\r\n    function RenderDish({dish}){\r\n        return(\r\n            <div className = \"col-12 col-md-5 m-1\">\r\n                <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                    <Card>\r\n                        <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                            <CardText>{dish.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </FadeTransform>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function RenderComments({comments, postComment, dishId}){\r\n        if(comments == null){\r\n            return(<div></div>)\r\n        }\r\n        return(\r\n            <div className = \"col-12 col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled\">\r\n                <Stagger in>\r\n                    {comments.map((comment) => {\r\n                        return(\r\n                            <Fade in>\r\n                                <li key={comment.id}>\r\n                                    <p>{comment.comment}</p>\r\n                                    <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                                </li>\r\n                            </Fade>\r\n                        );\r\n                    })}\r\n                </Stagger>\r\n                </ul>\r\n                <CommentForm dishId={dishId} postComment={postComment} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const DishDetail = (props)=>{\r\n        const dish = props.dish;\r\n        const comment = props.comments;\r\n        if(props.dishesLoading){\r\n            return(\r\n                <div className='container'>\r\n                    <div className='row'>\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else if(props.dishErrMsg){\r\n            return(\r\n                <div className='container'>\r\n                    <div className='row'>\r\n                        <h4>{props.dishErrMsg}</h4>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else if(dish == null){\r\n            return (<div></div>)\r\n        }\r\n        else {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className='row'>\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <div className='col-12'>\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                    <div className = \"row\">\r\n                        <RenderDish dish = {dish} />\r\n                        <RenderComments \r\n                            comments = { comment } \r\n                            postComment = { props.postComment }\r\n                            dishId = { props.dish.id } \r\n                        />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\nexport default DishDetail;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl'\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); \r\n    alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishLoading())\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if(response.ok){\r\n                return response\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ' : ' + response.statusText)\r\n                error.response = error\r\n                throw error\r\n            }\r\n        }, error => {\r\n            var errmess = new Error(error.message)\r\n            throw errmess\r\n        })\r\n        \r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)))\r\n}\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if(response.ok){\r\n                return response\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ' : ' + response.statusText)\r\n                error.response = error\r\n                throw error\r\n            }\r\n        }, error => {\r\n            var errmess = new Error(error.message)\r\n            throw errmess\r\n        })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)))\r\n}\r\n\r\nexport const dishLoading = () => ({\r\n    type : ActionTypes.DISHES_LOADING\r\n})\r\n\r\nexport const dishesFailed = (errMsg) => ({\r\n    type : ActionTypes.DISHES_FAILED,\r\n    payload : errMsg\r\n})\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type : ActionTypes.ADD_DISHES,\r\n    payload : dishes\r\n})\r\n\r\nexport const commentsFailed = (errMsg) => ({\r\n    type : ActionTypes.COMMENTS_FAILED,\r\n    payload : errMsg\r\n})\r\n\r\nexport const addComments = (comments) => ({\r\n    type : ActionTypes.ADD_COMMENTS,\r\n    payload : comments\r\n})\r\n\r\nexport const fetchPromos = () => (dispatch) => { \r\n    dispatch(promosLoading())   \r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if(response.ok){\r\n                return response\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ' : ' + response.statusText)\r\n                error.response = error\r\n                throw error\r\n            }\r\n        }, error => {\r\n            var errmess = new Error(error.message)\r\n            throw errmess\r\n        })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)))\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type : ActionTypes.PROMOS_LOADING\r\n})\r\n\r\nexport const promosFailed = (errMsg) => ({\r\n    type : ActionTypes.PROMOS_FAILED,\r\n    payload : errMsg\r\n})\r\n\r\nexport const addPromos = (promos) => ({\r\n    type : ActionTypes.ADD_PROMOS,\r\n    payload : promos\r\n})\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading(true));\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n            if(response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n\r\n                throw error;\r\n            }\r\n        }, (error) => {\r\n            var errorMessage = new Error(error.errorMessage);\r\n            throw errorMessage;\r\n        })\r\n        .then((response) => response.json())\r\n        .then((leaders) => dispatch(addLeaders(leaders)))\r\n        .catch((error) => dispatch(leadersFailed(error.message)))\r\n}\r\n\r\nexport const leadersLoading = () => (dispatch) => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\nexport const postFeedback = (feedback) => (dispatch) => {\r\n    const newFeedback = Object.assign({ date: new Date().toISOString() }, feedback)\r\n\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then((response) => {\r\n        if(response.ok) {\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n\r\n            throw error;\r\n        }\r\n    }, (error) => {\r\n        var errorMessage = new Error(error.errorMessage);\r\n        throw errorMessage;\r\n    })\r\n    .then((response) => response.json())\r\n    .then((response) => dispatch(addComment(response)))\r\n    .catch(error => {\r\n        console.log('POST feedback' + error.message);\r\n        alert('Feedback could not be posted:\\n' + error.message);\r\n    })\r\n}","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';","import React, {Component} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Menu from './MenuComponents';\r\nimport Home from './HomeComponent';\r\nimport {Redirect ,Route, Switch, withRouter } from 'react-router-dom';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchComments, fetchDishes, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n  return{\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  postComment : (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => { dispatch(fetchDishes()) },\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => { dispatch(fetchLeaders()) },\r\n  postFeedback: (feedback) => dispatch(postFeedback(feedback))\r\n});\r\n\r\nclass Main extends Component {\r\n  \r\n  componentDidMount() {\r\n    this.props.fetchDishes()\r\n    this.props.fetchComments()\r\n    this.props.fetchPromos()\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render() { \r\n    const HomePage = () => {\r\n      return(\r\n        <Home \r\n          dish = {this.props.dishes.dishes.filter((dish)=> dish.featured)[0]} \r\n          dishesLoading = {this.props.dishes.isLoading}\r\n          dishErrMsg = {this.props.dishes.errMsg}\r\n          promotion = {this.props.promotions.promotions.filter((promo)=> promo.featured)[0]} \r\n          promoLoading = {this.props.promotions.isLoading}\r\n          promoErrMsg = {this.props.promotions.errMsg}\r\n          leader = {this.props.leaders.leaders.filter((lead)=> lead.featured)[0]} \r\n          leadersLoading={this.props.leaders.isLoading}\r\n          leadersErrMess={this.props.leaders.errMess}\r\n        />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n        <DishDetail \r\n          dish = {this.props.dishes.dishes.filter(dish=>dish.id === parseInt(match.params.dishId,10))[0]} \r\n          isLoading = {this.props.dishes.isLoading}\r\n          errMsg = {this.props.dishes.errMsg}\r\n          comments = {this.props.comments.comments.filter(comm=>comm.dishId === parseInt(match.params.dishId,10))}\r\n          commentsErrMsg = {this.props.comments.errMsg}\r\n          postComment = {this.props.postComment}\r\n        />\r\n      );\r\n    }\r\n\r\n    return ( \r\n      <TransitionGroup>\r\n            <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n              <Switch location={this.props.location}>\r\n                  <Route path='/home' component={HomePage} />\r\n                  <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />} />\r\n                  <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                  <Route path='/menu/:dishId' component={DishWithId} />\r\n                  <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback}/>} />\r\n                  <Redirect to=\"/home\" />\r\n              </Switch>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n     );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { Jumbotron, Nav, Navbar, NavbarBrand, NavbarToggler, NavItem, Collapse, Modal, ModalHeader, ModalBody, Button, Form, FormGroup, Label, Input } from 'reactstrap'\r\nclass Header extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        }\r\n    }\r\n    \r\n    toggleNav =()=> {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n    \r\n    toggleModal =()=>{\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin = (event) =>{   \r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n    \r\n    render() {\r\n        return ( \r\n            <React.Fragment>\r\n                <Navbar dark expand='md'>\r\n                    <div className = 'container'>\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className='mr-auto' href='/'>\r\n                            <img src='assets/images/logo.png' height='30' width='41'\r\n                             alt='Ristorante Con Fusion' />\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className='nav-link' to='/home'>\r\n                                        <span className='fa fa-home fa-lg'></span> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className='nav-link' to='/aboutus'>\r\n                                        <span className='fa fa-info  fa-lg'></span> About Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className='nav-link' to='/menu'>\r\n                                        <span className='fa fa-list fa-lg'></span> Menu\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className='nav-link' to='/contactus'>\r\n                                        <span className='fa fa-address-card fa-lg'></span> Contact Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                        <Nav  className='ml-auto' navbar>\r\n                            <NavItem>\r\n                                <Button outline onClick={this.toggleModal}><span className='fa fa-sign-in fa-lg'></span>Login</Button>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </div>\r\n                </Navbar>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={input=>this.username=input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={input=>this.password=input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={input=>this.remember=input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n                <Jumbotron>\r\n                    <div className='container'>\r\n                        <div className='row row-header'>\r\n                            <div className='col-12 col-sm-6'>\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction Footer(props){\r\n    return(\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><Link to=\"/home\">Home</Link></li>\r\n                            <li><Link to=\"/aboutus\">About Us</Link></li>\r\n                            <li><Link to=\"/menu\">Menu</Link></li>\r\n                            <li><Link to=\"/contactus\">Contact Us</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                            confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center\">\r\n                        <div className=\"text-center\">\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    </div>\r\n    );\r\n} \r\n\r\nexport default Footer;","import * as ActionTypes from './ActionTypes'\r\n\r\nexport const Dishes = (state = {\r\n    isLoading : true,\r\n    errMsg : null,\r\n    dishes: []\r\n}, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.DISHES_LOADING:\r\n            return { ...state,isLoading:true,errMsg:null,dishes:[] }\r\n        case ActionTypes.DISHES_FAILED:\r\n            return { ...state, isLoading:false,errMsg:null, dishes:[]}\r\n        case ActionTypes.ADD_DISHES:\r\n            return { ...state,isLoading:false,errMsg:null,dishes:action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = {\r\n    errMsg: null,\r\n    comments: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return { ...state, errMess: null, comments: action.payload }\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return { ...state, errMess: action.payload}\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return {...state, comments:state.comments.concat(comment)};\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []\r\n    }, action) => {\r\n        switch(action.type) {\r\n            case ActionTypes.ADD_LEADERS:\r\n                return {...state, isLoading:false, errMess: null, leaders: action.payload};\r\n                \r\n            case ActionTypes.LEADERS_LOADING:\r\n                return {...state, isLoading: true, errMess: null, leaders:[]};\r\n                \r\n            case ActionTypes.LEADERS_FAILED:\r\n                return {...state, isLoading:false, errMess: null, leaders:[]};\r\n                \r\n            default:\r\n                return state;\r\n        }\r\n    }","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = {\r\n    isLoading: true,\r\n    errMsg: null,\r\n    promotions: []\r\n}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return { ...state,isLoading:false,errMsg:null,promotions:action.payload }\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return { ...state,isLoading:true,errMsg:null,promotions:[] }\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return { ...state, isLoading:false,errMsg:action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, {Component} from 'react';\r\nimport Main from './components/MainComponents'\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\nimport Header from './components/HeaderComponent';\r\nimport Footer from './components/FooterComponent';\r\nimport { Provider } from 'react-redux';\r\nimport { configureStore } from './redux/confgureStore';\r\n\r\nconst store = configureStore();\r\n\r\nclass App extends Component {\r\n  render() { \r\n    return ( \r\n      <Provider store={store}>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Header />\r\n            <Main />\r\n            <Footer />\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n     );\r\n  }\r\n}\r\n\r\nexport default App;","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Leaders } from './leaders';\r\nimport { Promotions } from './promotions';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger'\r\nimport { createForms } from 'react-redux-form'\r\nimport { InitialFeedback } from './forms'\r\n\r\nexport const configureStore = () =>{\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            leaders: Leaders,\r\n            promotions: Promotions,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk,logger)\r\n    );\r\n    return store;\r\n}\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'font-awesome/css/font-awesome.min.css'\r\nimport 'bootstrap-social/bootstrap-social.css'\r\nimport './index.css';\r\nimport './App.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <App />\r\n  </React.Fragment>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}